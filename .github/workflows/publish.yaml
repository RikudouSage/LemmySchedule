name: Publish

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOMAIN_NAME: schedule.lemmings.world
      DOMAIN_ZONE: Z04564103VF7YTIMBHJE4
      AWS_REGION: eu-central-1
      APP_ENV: prod
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      FILE_UPLOADER_CLASS: App\FileUploader\S3FileUploader
      IMGUR_ACCESS_TOKEN: ${{ secrets.IMGUR_ACCESS_TOKEN }}
      UNREAD_POSTS_BOT_JWT: ${{ secrets.UNREAD_POSTS_BOT_JWT }}
      UNREAD_POSTS_BOT_INSTANCE: lemmings.world
      NEW_VERSION_CHECK: 0
    steps:
      - name: Extract Version Name
        id: extract_version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            if (context.payload.ref.startsWith('refs/tags/')) {
              return context.payload.ref.replace(/refs\/tags\/v/, '');
            }
            return 'dev';
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
      - name: Install serverless
        run: yarn global add serverless@3
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup php dependencies
        run: composer install --no-dev --no-scripts
      - name: Setup js dependencies
        run: yarn install
      - name: Create version file
        run: 'echo -e "parameters:\n  app.current_version: $VERSION" > config/packages/version.yaml'
        env:
          VERSION: ${{ steps.extract_version.outputs.result }}
      - name: Build assets
        run: yarn build
      - name: Prepare cache
        run: ./bin/console cache:warmup --env=prod
      - name: Deploy infrastructure
        run: serverless deploy --stage prod --verbose --region $AWS_REGION
      - name: Deploy assets
        run: |
          export ASSETS_BUCKET=$(aws cloudformation describe-stacks --stack-name LemmySchedule-prod --query "Stacks[0].Outputs[?OutputKey=='AssetsBucket'].OutputValue" --output=text --region $AWS_REGION)
          aws s3 sync public/build s3://$ASSETS_BUCKET/build --delete
          aws s3 sync public/icon s3://$ASSETS_BUCKET/icon --delete
      - name: Clear CDN cache
        run: |
          export CDN_ID=$(aws cloudformation describe-stacks --stack-name LemmySchedule-prod --query "Stacks[0].Outputs[?OutputKey=='Cdn'].OutputValue" --output=text --region $AWS_REGION)
          aws cloudfront create-invalidation --distribution-id $CDN_ID --paths "/*" 2>&1 > /dev/null
